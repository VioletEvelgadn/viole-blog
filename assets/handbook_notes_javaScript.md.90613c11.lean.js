import{_ as l,c as p,a as s,N as a,x as n,o}from"./chunks/framework.75eb0240.js";const e="/viole-blog/assets/img_1.5d761bf1.png",t="/viole-blog/assets/img_2.7a2319be.png",T=JSON.parse('{"title":"javaScript学习","description":"","frontmatter":{},"headers":[],"relativePath":"handbook/notes/javaScript.md"}'),c={name:"handbook/notes/javaScript.md"},r=a("",17),y=a("",3),i=a("",3),D=a("",19),C=a("",13),A=n("h2",null,"循环的标准",-1),F=a("",24),d=a("",13),h=n("h3",null," Object.fromEntries()",-1),u=a("",3),_=a("",1);function f(g,b,v,m,S,E){return o(),p("div",null,[r,s(" 要想使用变量，你需要做的第一步就是创建它 -- 更准确的说，是声明一个变量。 声明变量的语法是在var关键字后面加上这个变量的名字 "),y,s(" 可以看出b变量没有值所以b变量是一个空容器。当你输入变量b并回车后，你会得到一个undefined的返回值。 如果他们并不存在的话，那你就会得到一个报错信息。不信的话，可以尝试输入： "),i,s(" 可以为变量设置不同的数据类型。本节我们将对其进行简短的介绍，在以后的文章中，你会更详细地了解它们。 "),D,s(" 算术运算符是我们用来做和的基本运算符 如下表所示: "),C,s(" ```js loop(food = 0; foodNeeded = 10) { if (food = foodNeeded) { exit loop; // 我们有足够的食物了，回家吧。 } else { food += 2; // 花一个小时多收集两个食物。 // 循环将会继续执行。 } } ``` 所以需要的食物量定为 10，农民目前的数量为 0。在循环的每次迭代中，我们检查农民的食物量是否等于他需要的量。如果是这样，我们可以退出循环。如果没有，农民花一个小时收集两部分食物，循环再次运行。 "),A,s(" 我们开始探索一些特定的循环结构。第一个，你会经常使用到它，for 循环 - 以下为 for 循环的语法： ```js for (initializer; exit-condition; final-expression) { // code to run } ``` 1. 关键字for，后跟一些括号。 2. 在括号内，我们有三个项目，以分号分隔： 一个初始化器 - 这通常是一个设置为一个数字的变量，它被递增来计算循环运行的次数。它也有时被称为计数变量。 一个退出条件 - 如前面提到的，这个定义循环何时停止循环。这通常是一个表现为比较运算符的表达式，用于查看退出条件是否已满足的测试。 一个最终条件 - 这总是被判断（或运行），每个循环已经通过一个完整的迭代消失时间。它通常用于增加（或在某些情况下递减）计数器变量，使其更接近退出条件值。 3. 一些包含代码块的花括号 - 每次循环迭代时都会运行这个代码。 "),F,s(" let实际上为 JavaScript 新增了块级作用域。 ```js function f1() { let n = 5; if (true) { let n = 10; } console.log(n); // 5 } ``` 上面的函数有两个代码块，都声明了变量n，运行后输出 5。这表示外层代码块不受内层代码块的影响。如果两次都使用var定义变量n，最后输出的值才是 10。 "),d,s(" ES6 允许在大括号里面，直接写入变量和函数，作为对象的属性和方法。这样的书写更加简洁。 ```js const foo = 'bar'; const baz = {foo}; baz // {foo: \"bar\"} // 等同于 const baz = {foo: foo}; ``` "),h,s(" Object.fromEntries()方法是Object.entries()的逆操作，用于将一个键值对数组转为对象。 "),u,s(" Object.assign方法用于对象的合并，将源对象（source）的所有可枚举属性，复制到目标对象（target）。 "),_])}const k=l(c,[["render",f]]);export{T as __pageData,k as default};
