import{_ as a,c as n,a as l,N as s,o as e}from"./chunks/framework.75eb0240.js";const o="/viole-blog/assets/img.18a1e12f.png",F=JSON.parse('{"title":"1.前言","description":"","frontmatter":{},"headers":[],"relativePath":"handbook/notes/css.md"}'),p={name:"handbook/notes/css.md"},t=s(`<h1 id="_1-前言" tabindex="-1">1.前言 <a class="header-anchor" href="#_1-前言" aria-label="Permalink to &quot;1.前言&quot;">​</a></h1><br><h5> 说起css3相信大家都并不陌生。css作为html最高贵的化妆品，使用起来并不难可以说是有手就行，但要用好它确非常困难，写这篇文章之前我浏览过大量有关css新特性的文章， 这篇文章主要是带大家了解css3的一些新特性，以及基础的用法，体会css3的魅力！当然如果想要更好的使用这盒化妆品 还是需要努力学习，去寻找一些讲的更深入的文章与书籍，切记本文章所讲的只是基础。 </h5><h2 id="_2-过度" tabindex="-1">2 过度 <a class="header-anchor" href="#_2-过度" aria-label="Permalink to &quot;2 过度&quot;">​</a></h2><p>过度，是我们在项目中用的最多的一个特性，使用它主要是为了实现一些交互效果，让页面变得生动一些显得不那么死气沉沉</p><h3 id="_2-1-语法" tabindex="-1">2.1 语法 <a class="header-anchor" href="#_2-1-语法" aria-label="Permalink to &quot;2.1 语法&quot;">​</a></h3><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">transition： CSS属性，花费时间，效果曲线(默认ease)，延迟时间(默认0)</span></span></code></pre></div><p>举个例子</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/*假设我们想在鼠标移入时将item这个方块向右移动100px的位置移动时间为一秒*/</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> all</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1s</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">hover</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#B2CCD6;">margin-left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">40px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="_3-动画" tabindex="-1">3 动画 <a class="header-anchor" href="#_3-动画" aria-label="Permalink to &quot;3 动画&quot;">​</a></h2><p>动画与过度相似都是为了实现一些交互效果，让页面变得生动一些显得不那么死气沉沉</p><h3 id="_3-1-推荐" tabindex="-1">3.1 推荐 <a class="header-anchor" href="#_3-1-推荐" aria-label="Permalink to &quot;3.1 推荐&quot;">​</a></h3><p>在举例子之前我先向大家推荐几个我认为比较好用的css动画库</p><p><a href="https://animista.net/" target="_blank" rel="noreferrer">1.Animista</a></p><p>Animista是一个在线动画生成器，同时也是一个动画库</p><p><a href="https://animate.style/" target="_blank" rel="noreferrer">2. Animate CSS</a></p><p>想必这个不用介绍，大部分人都知道了。Animate CSS 可能是最著名的动画库之一。</p><p>这里就向大家推荐这两个css动画库，这里我就不过多介绍这个两个库了，有兴趣的可以自行去了解一下</p><h3 id="_3-2-语法" tabindex="-1">3.2 语法 <a class="header-anchor" href="#_3-2-语法" aria-label="Permalink to &quot;3.2 语法&quot;">​</a></h3><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">animation：动画名称，一个周期花费时间，运动曲线（默认ease），动画延迟（默认0），播放次数（默认1），是否反向播放动画（默认normal），是否暂停动画（默认running）</span></span></code></pre></div><p>举个例子</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">/*执行一次line动画，运动时间2秒，运动曲线为 linear*/</span></span>
<span class="line"><span style="color:#A6ACCD;">animation: line 2s linear;</span></span></code></pre></div><h2 id="_4-条形转换" tabindex="-1">4 条形转换 <a class="header-anchor" href="#_4-条形转换" aria-label="Permalink to &quot;4 条形转换&quot;">​</a></h2><p>条形转换分2D转换与3D转换</p><h3 id="_4-1-语法" tabindex="-1">4.1 语法 <a class="header-anchor" href="#_4-1-语法" aria-label="Permalink to &quot;4.1 语法&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">transform:适用于2D或3D转换的元素</span></span>
<span class="line"><span style="color:#A6ACCD;">transform-origin：转换元素的位置（围绕那个点进行转换）。默认(x,y,z)：(50%,50%,0)</span></span></code></pre></div><h3 id="_4-2-用法" tabindex="-1">4.2 用法 <a class="header-anchor" href="#_4-2-用法" aria-label="Permalink to &quot;4.2  用法&quot;">​</a></h3><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">transform:rotate(30deg)</span></span>
<span class="line"><span style="color:#A6ACCD;">transform:translate(30px</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">30px)</span></span>
<span class="line"><span style="color:#A6ACCD;">transform:scale(</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">8)</span></span></code></pre></div><h2 id="_5-选择器" tabindex="-1">5. 选择器 <a class="header-anchor" href="#_5-选择器" aria-label="Permalink to &quot;5. 选择器&quot;">​</a></h2><p><img src="`+o+`" alt="img"> 图片来自W3C。这一块强烈大家去w3c看(<a href="https://www.w3school.com.cn/cssref/css_selectors.asp" target="_blank" rel="noreferrer">css手册参考</a>)，那里的例子通俗易懂。我不重复讲了。</p><h2 id="_6-阴影" tabindex="-1">6. 阴影 <a class="header-anchor" href="#_6-阴影" aria-label="Permalink to &quot;6. 阴影&quot;">​</a></h2><p>以前没有css3的时候，或者需要兼容低版本浏览器的时候，阴影只能用图片实现，但是现在不需要，css3就提供了！</p><h3 id="_6-1-语法" tabindex="-1">6.1 语法 <a class="header-anchor" href="#_6-1-语法" aria-label="Permalink to &quot;6.1 语法&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">box-shadow: 水平阴影的位置 垂直阴影的位置 模糊距离 阴影的大小 阴影的颜色 阴影开始方向（默认是从里往外，设置inset就是从外往里）;</span></span></code></pre></div><h3 id="_6-2-举个例子" tabindex="-1">6.2 举个例子 <a class="header-anchor" href="#_6-2-举个例子" aria-label="Permalink to &quot;6.2 举个例子&quot;">​</a></h3><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">box-shadow</span><span style="color:#A6ACCD;">: 10px 10px 5px </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">888888 ;</span></span></code></pre></div><h2 id="_7-边框" tabindex="-1">7 边框 <a class="header-anchor" href="#_7-边框" aria-label="Permalink to &quot;7 边框&quot;">​</a></h2><p>图片边框与边框圆角</p><h3 id="_7-1-图片边框语法" tabindex="-1">7.1 图片边框语法 <a class="header-anchor" href="#_7-1-图片边框语法" aria-label="Permalink to &quot;7.1 图片边框语法&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">border-image: </span></span>
<span class="line"><span style="color:#A6ACCD;">图片url 图像边界向内偏移 </span></span>
<span class="line"><span style="color:#A6ACCD;">图像边界的宽度(默认为边框的宽度) </span></span>
<span class="line"><span style="color:#A6ACCD;">用于指定在边框外部绘制偏移的量（默认0） </span></span>
<span class="line"><span style="color:#A6ACCD;">铺满方式--重复（repeat）、拉伸（stretch）或铺满（round）（默认：拉伸（stretch））;</span></span></code></pre></div><h3 id="_7-2-举个例子" tabindex="-1">7.2 举个例子 <a class="header-anchor" href="#_7-2-举个例子" aria-label="Permalink to &quot;7.2 举个例子&quot;">​</a></h3><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">border</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">15px</span><span style="color:#A6ACCD;"> solid transparent</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">padding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">15px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">border-image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">url</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">border.png</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">border-image-slice</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">border-image-repeat</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> round</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">border-image-outset</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_7-3-边框圆角语法" tabindex="-1">7.3 边框圆角语法 <a class="header-anchor" href="#_7-3-边框圆角语法" aria-label="Permalink to &quot;7.3 边框圆角语法&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">border-radius: n1,n2,n3,n4;</span></span>
<span class="line"><span style="color:#A6ACCD;">border-radius: n1,n2,n3,n4/n1,n2,n3,n4;</span></span>
<span class="line"><span style="color:#A6ACCD;">/*n1-n4四个值的顺序是：左上角，右上角，右下角，左下角。*/</span></span></code></pre></div><h2 id="_8-背景" tabindex="-1">8 背景 <a class="header-anchor" href="#_8-背景" aria-label="Permalink to &quot;8 背景&quot;">​</a></h2><p>背景中主要有三个属性</p><h3 id="_8-1-背景图的使用与介绍" tabindex="-1">8.1 背景图的使用与介绍 <a class="header-anchor" href="#_8-1-背景图的使用与介绍" aria-label="Permalink to &quot;8.1 背景图的使用与介绍&quot;">​</a></h3><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/*制定背景绘制（显示）区域  默认情况（从边框开始绘制）*/</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#FFCB6B;">div</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">background-clip</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> border-box </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">/*background-Origin属性指定background-position属性应该是相对位置 下面的div初始的html和css代码都是一样的*/</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">div</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">background-Origin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> border-box </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">/*  这个相信很好理解，就是制定背景的大小 下面的div初始的html和css代码都是一样的  */</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">div</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">background-size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10px</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="_9-flex弹性布局" tabindex="-1">9 flex弹性布局 <a class="header-anchor" href="#_9-flex弹性布局" aria-label="Permalink to &quot;9 flex弹性布局&quot;">​</a></h2><br>`,50),r=s(`<h3 id="_9-1-y轴与x轴" tabindex="-1">9.1 Y轴与X轴 <a class="header-anchor" href="#_9-1-y轴与x轴" aria-label="Permalink to &quot;9.1 Y轴与X轴&quot;">​</a></h3><p>学习flex布局需要明白”X轴“与”Y轴“的概念，采用flex布局的元素， 称为”容器“ （ flex container）， 它的所有子元素都是容器的”项目“（flex item），容器默认存在两根轴： 水平的X轴（main axis）和垂直的Y轴（cross axis）。 X轴的开始位置（与边框的交叉点）叫做 main start ， 结束位置叫做 main end ；Y轴的开始位置叫做 cross start ，结束位置叫做 cross end 。</p><h3 id="_9-2-属性" tabindex="-1">9.2 属性 <a class="header-anchor" href="#_9-2-属性" aria-label="Permalink to &quot;9.2 属性&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">// flex中有六大属性</span></span>
<span class="line"><span style="color:#A6ACCD;">    1.flex-direction</span></span>
<span class="line"><span style="color:#A6ACCD;">    2.flex-wtap</span></span>
<span class="line"><span style="color:#A6ACCD;">    3.flex-flow</span></span>
<span class="line"><span style="color:#A6ACCD;">    4.justify-content</span></span>
<span class="line"><span style="color:#A6ACCD;">    5.align-items</span></span>
<span class="line"><span style="color:#A6ACCD;">    6.align-content</span></span></code></pre></div>`,4);function c(i,C,y,D,d,h){return e(),n("div",null,[t,l(" 弹性盒子是一种用于按行或按列布局元素的一维布局方法，元素可以膨胀以填充额外的空间， 收缩以适应更小的空间，适用于任何元素上，如果一个元素使用了flex弹性布局（以下都会简称为：flex布局）， 则会在内部形成BFC，flex布局已经得到了所有浏览器的支持，这意味着，现在就能放心，安全的使用这项技术。 "),r])}const u=a(p,[["render",c]]);export{F as __pageData,u as default};
